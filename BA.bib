
@article{minas_concepts_2002,
	title = {Concepts and realization of a diagram editor generator based on hypergraph transformation},
	volume = {44},
	issn = {01676423},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167642302000370},
	doi = {10.1016/S0167-6423(02)00037-0},
	pages = {157--180},
	number = {2},
	journaltitle = {Science of Computer Programming},
	shortjournal = {Science of Computer Programming},
	author = {Minas, Mark},
	urldate = {2020-04-07},
	date = {2002-08},
	langid = {english},
	file = {Minas - 2002 - Concepts and realization of a diagram editor gener:/home/hannah/Zotero/storage/EUF7PRT3/Minas - 2002 - Concepts and realization of a diagram editor gener:application/pdf}
}

@thesis{nachreiner_couchedit_2020,
	location = {Ulm},
	title = {{CouchEdit} - a modular graphical editing architecture for flexible modeling},
	url = {http://dx.doi.org/10.18725/OPARU-25291},
	abstract = {Models have long become an integral part of many system development activities. In particular, research in the field of Model Driven Engineering ({MDE}) strives to facilitate problem-oriented creation of complex systems. To this end, the use of graphical (diagram) notations is an important cornerstone, providing users with an intuitive way of interacting with models and taking advantage of wider areas of cognitive capability than possible through purely text-based approaches. However, contrary to these underlying goals, the support of such graphical notations through appropriate tools is still believed to be not optimal, with the usability of such tools being low, thus causing bad Modeling Experience. This is accompanied by new trends in productivity at large, such as the desire to work collaboratively and in a distributed fashion. From this, we saw a need for the conceptualization and development of a graphical editing framework that works on premises different to previous ideas. Following the Design Science Research paradigm, anchored on recent work from other research groups, a modular and flexible concept is presented which strives to remove as much limits as possible that are traditionally given by the user interface – and thus imposed on the user – based on the definition of the supported modeling notation. This concept is also demonstrated by use of an executable, vertical prototype, which is furthermore used for evaluating the performance and bottlenecks imposed by the concept and its implementation.},
	institution = {University of Ulm},
	type = {thesis},
	author = {Nachreiner, Leander},
	date = {2020-02-17},
	file = {Nachreiner - 2020 - CouchEdit - a modular graphical editing architectu.pdf:/home/hannah/Zotero/storage/XMAYQRMQ/Nachreiner - 2020 - CouchEdit - a modular graphical editing architectu.pdf:application/pdf}
}

@inproceedings{van_tendeloo_concrete_2017,
	location = {Vancouver, {BC}, Canada},
	title = {Concrete syntax: a multi-paradigm modelling approach},
	isbn = {978-1-4503-5525-4},
	url = {http://dl.acm.org/citation.cfm?doid=3136014.3136017},
	doi = {10.1145/3136014.3136017},
	shorttitle = {Concrete syntax},
	eventtitle = {the 10th {ACM} {SIGPLAN} International Conference},
	pages = {182--193},
	booktitle = {Proceedings of the 10th {ACM} {SIGPLAN} International Conference on Software Language Engineering - {SLE} 2017},
	publisher = {{ACM} Press},
	author = {Van Tendeloo, Yentl and Van Mierlo, Simon and Meyers, Bart and Vangheluwe, Hans},
	urldate = {2020-03-15},
	date = {2017},
	langid = {english},
	file = {Van Tendeloo et al. - 2017 - Concrete syntax a multi-paradigm modelling approa.pdf:/home/hannah/Zotero/storage/NB6MACEW/Van Tendeloo et al. - 2017 - Concrete syntax a multi-paradigm modelling approa.pdf:application/pdf}
}