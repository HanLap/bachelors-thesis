
@inproceedings{van_tendeloo_concrete_2017,
	location = {Vancouver, {BC}, Canada},
	title = {Concrete syntax: a multi-paradigm modelling approach},
	isbn = {978-1-4503-5525-4},
	url = {http://dl.acm.org/citation.cfm?doid=3136014.3136017},
	doi = {10.1145/3136014.3136017},
	shorttitle = {Concrete syntax},
	eventtitle = {the 10th {ACM} {SIGPLAN} International Conference},
	pages = {182--193},
	booktitle = {Proceedings of the 10th {ACM} {SIGPLAN} International Conference on Software Language Engineering - {SLE} 2017},
	publisher = {{ACM} Press},
	author = {Van Tendeloo, Yentl and Van Mierlo, Simon and Meyers, Bart and Vangheluwe, Hans},
	urldate = {2020-03-15},
	date = {2017},
	langid = {english},
	file = {Van Tendeloo et al. - 2017 - Concrete syntax a multi-paradigm modelling approa.pdf:C\:\\Users\\Flori\\Zotero\\storage\\NB6MACEW\\Van Tendeloo et al. - 2017 - Concrete syntax a multi-paradigm modelling approa.pdf:application/pdf}
}

@thesis{nachreiner_couchedit_2020,
	location = {Ulm},
	title = {{CouchEdit} - a modular graphical editing architecture for flexible modeling},
	url = {http://dx.doi.org/10.18725/OPARU-25291},
	abstract = {Models have long become an integral part of many system development activities. In particular, research in the field of Model Driven Engineering ({MDE}) strives to facilitate problem-oriented creation of complex systems. To this end, the use of graphical (diagram) notations is an important cornerstone, providing users with an intuitive way of interacting with models and taking advantage of wider areas of cognitive capability than possible through purely text-based approaches. However, contrary to these underlying goals, the support of such graphical notations through appropriate tools is still believed to be not optimal, with the usability of such tools being low, thus causing bad Modeling Experience. This is accompanied by new trends in productivity at large, such as the desire to work collaboratively and in a distributed fashion. From this, we saw a need for the conceptualization and development of a graphical editing framework that works on premises different to previous ideas. Following the Design Science Research paradigm, anchored on recent work from other research groups, a modular and flexible concept is presented which strives to remove as much limits as possible that are traditionally given by the user interface – and thus imposed on the user – based on the definition of the supported modeling notation. This concept is also demonstrated by use of an executable, vertical prototype, which is furthermore used for evaluating the performance and bottlenecks imposed by the concept and its implementation.},
	institution = {University of Ulm},
	type = {Masters Thesis},
	author = {Nachreiner, Leander},
	date = {2020-02-17},
	file = {Nachreiner - 2020 - CouchEdit - a modular graphical editing architectu.pdf:C\:\\Users\\Flori\\Zotero\\storage\\XMAYQRMQ\\Nachreiner - 2020 - CouchEdit - a modular graphical editing architectu.pdf:application/pdf}
}

@article{minas_concepts_2002,
	title = {Concepts and realization of a diagram editor generator based on hypergraph transformation},
	volume = {44},
	issn = {01676423},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167642302000370},
	doi = {10.1016/S0167-6423(02)00037-0},
	pages = {157--180},
	number = {2},
	journaltitle = {Science of Computer Programming},
	shortjournal = {Science of Computer Programming},
	author = {Minas, Mark},
	urldate = {2020-04-07},
	date = {2002-08},
	langid = {english},
	file = {Minas - 2002 - Concepts and realization of a diagram editor gener:C\:\\Users\\Flori\\Zotero\\storage\\EUF7PRT3\\Minas - 2002 - Concepts and realization of a diagram editor gener:application/pdf;Minas - 2002 - Concepts and realization of a diagram editor gener.pdf:C\:\\Users\\Flori\\Zotero\\storage\\VPRKEAHB\\Minas - 2002 - Concepts and realization of a diagram editor gener.pdf:application/pdf}
}

@online{vaishnavi_design_2004,
	title = {Design Research in Information Systems},
	url = {http://desrist.org/design-research-in-information-systems},
	author = {Vaishnavi, V. and Kuechler, W.},
	date = {2004-01}
}

@incollection{fondement_making_2005,
	location = {Berlin, Heidelberg},
	title = {Making Metamodels Aware of Concrete Syntax},
	volume = {3748},
	isbn = {978-3-540-30026-7 978-3-540-32093-7},
	url = {http://link.springer.com/10.1007/11581741_15},
	pages = {190--204},
	booktitle = {Model Driven Architecture – Foundations and Applications},
	publisher = {Springer Berlin Heidelberg},
	author = {Fondement, Frédéric and Baar, Thomas},
	urldate = {2020-04-23},
	date = {2005},
	doi = {10.1007/11581741_15},
	note = {Series Title: Lecture Notes in Computer Science},
	file = {Submitted Version:C\:\\Users\\Flori\\Zotero\\storage\\UN58JDH2\\Fondement and Baar - 2005 - Making Metamodels Aware of Concrete Syntax.pdf:application/pdf}
}

@article{baar_correctly_2008,
	title = {Correctly defined concrete syntax},
	volume = {7},
	issn = {1619-1366, 1619-1374},
	url = {http://link.springer.com/10.1007/s10270-008-0086-z},
	doi = {10.1007/s10270-008-0086-z},
	pages = {383--398},
	number = {4},
	journaltitle = {Software \& Systems Modeling},
	shortjournal = {Softw Syst Model},
	author = {Baar, Thomas},
	urldate = {2020-04-27},
	date = {2008-10},
	langid = {english},
	file = {Submitted Version:C\:\\Users\\Flori\\Zotero\\storage\\VDXNVWLJ\\Baar - 2008 - Correctly defined concrete syntax.pdf:application/pdf}
}

@article{costagliola_classification_2002,
	title = {A Classification Framework to Support the Design of Visual Languages},
	volume = {13},
	issn = {1045926X},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S1045926X0290234X},
	doi = {10.1006/jvlc.2002.0234},
	pages = {573--600},
	number = {6},
	journaltitle = {Journal of Visual Languages \& Computing},
	shortjournal = {Journal of Visual Languages \& Computing},
	author = {Costagliola, G. and Delucia, A. and Orefice, S. and Polese, G.},
	urldate = {2020-04-27},
	date = {2002-12},
	langid = {english},
	file = {Costagliola et al. - 2002 - A Classification Framework to Support the Design o.pdf:C\:\\Users\\Flori\\Zotero\\storage\\956HPUDA\\Costagliola et al. - 2002 - A Classification Framework to Support the Design o.pdf:application/pdf}
}

@inproceedings{bottoni_suite_2004,
	location = {Rome},
	title = {A Suite of Metamodels as a Basis for a Classification of Visual Languages},
	isbn = {978-0-7803-8696-9},
	url = {http://ieeexplore.ieee.org/document/1372303/},
	doi = {10.1109/VLHCC.2004.5},
	eventtitle = {2004 {IEEE} Symposium on Visual Languages - Human Centric Computing},
	pages = {83--90},
	booktitle = {2004 {IEEE} Symposium on Visual Languages - Human Centric Computing},
	publisher = {{IEEE}},
	author = {Bottoni, P. and Grau, A.},
	urldate = {2020-04-23},
	date = {2004},
	file = {Bottoni and Grau - 2004 - A Suite of Metamodels as a Basis for a Classificat.pdf:C\:\\Users\\Flori\\Zotero\\storage\\XM4UHTSX\\Bottoni and Grau - 2004 - A Suite of Metamodels as a Basis for a Classificat.pdf:application/pdf}
}

@article{moody_physics_2009,
	title = {The “Physics” of Notations: Toward a Scientific Basis for Constructing Visual Notations in Software Engineering},
	volume = {35},
	issn = {0098-5589},
	url = {http://ieeexplore.ieee.org/document/5353439/},
	doi = {10.1109/TSE.2009.67},
	shorttitle = {The “Physics” of Notations},
	pages = {756--779},
	number = {6},
	journaltitle = {{IEEE} Transactions on Software Engineering},
	shortjournal = {{IIEEE} Trans. Software Eng.},
	author = {Moody, D.},
	urldate = {2020-04-23},
	date = {2009-11},
	file = {Moody - 2009 - The “Physics” of Notations Toward a Scientific Ba.pdf:C\:\\Users\\Flori\\Zotero\\storage\\P9ITE6B6\\Moody - 2009 - The “Physics” of Notations Toward a Scientific Ba.pdf:application/pdf}
}

@article{minas_specifying_2001,
	title = {Specifying and Implementing Visual Process Modeling Languages with {DiaGen}},
	volume = {44},
	issn = {15710661},
	url = {https://www.sciencedirect.com/science/article/pii/S1571066104809447},
	doi = {10.1016/S1571-0661(04)80944-7},
	pages = {67--79},
	number = {4},
	journaltitle = {Electronic Notes in Theoretical Computer Science},
	shortjournal = {Electronic Notes in Theoretical Computer Science},
	author = {Minas, Mark and Hoffmann, Berthold},
	urldate = {2020-04-22},
	date = {2001-07},
	langid = {english},
	file = {Full Text:C\:\\Users\\Flori\\Zotero\\storage\\2DSWUYZN\\Minas and Hoffmann - 2001 - Specifying and Implementing Visual Process Modelin.pdf:application/pdf}
}

@incollection{amyot_mid_2014,
	location = {Cham},
	title = {{MID}: A {MetaCASE} Tool for a Better Reuse of Visual Notations},
	volume = {8769},
	isbn = {978-3-319-11742-3 978-3-319-11743-0},
	url = {http://link.springer.com/10.1007/978-3-319-11743-0_2},
	shorttitle = {{MID}},
	pages = {16--31},
	booktitle = {System Analysis and Modeling: Models and Reusability},
	publisher = {Springer International Publishing},
	author = {El Kouhen, Amine and Gherbi, Abdelouahed and Dumoulin, Cédric and Boulet, Pierre and Gérard, Sébastien},
	editor = {Amyot, Daniel and Fonseca i Casas, Pau and Mussbacher, Gunter},
	urldate = {2020-04-18},
	date = {2014},
	doi = {10.1007/978-3-319-11743-0_2},
	note = {Series Title: Lecture Notes in Computer Science},
	file = {Submitted Version:C\:\\Users\\Flori\\Zotero\\storage\\BQKCJNUF\\El Kouhen et al. - 2014 - MID A MetaCASE Tool for a Better Reuse of Visual .pdf:application/pdf}
}

@article{karsai_design_2014,
	title = {Design Guidelines for Domain Specific Languages},
	url = {http://arxiv.org/abs/1409.2378},
	abstract = {Designing a new domain specific language is as any other complex task sometimes error-prone and usually time consuming, especially if the language shall be of high-quality and comfortably usable. Existing tool support focuses on the simplification of technical aspects but lacks support for an enforcement of principles for a good language design. In this paper we investigate guidelines that are useful for designing domain specific languages, largely based on our experience in developing languages as well as relying on existing guidelines on general purpose ({GPLs}) and modeling languages. We defined guidelines to support a {DSL} developer to achieve better quality of the language design and a better acceptance among its users.},
	journaltitle = {{arXiv}:1409.2378 [cs]},
	author = {Karsai, Gabor and Krahn, Holger and Pinkernell, Claas and Rumpe, Bernhard and Schindler, Martin and Völkel, Steven},
	urldate = {2020-04-18},
	date = {2014-09-08},
	eprinttype = {arxiv},
	eprint = {1409.2378},
	keywords = {Computer Science - Software Engineering},
	file = {arXiv Fulltext PDF:C\:\\Users\\Flori\\Zotero\\storage\\AF3XZUX4\\Karsai et al. - 2014 - Design Guidelines for Domain Specific Languages.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\Flori\\Zotero\\storage\\YSLJS873\\1409.html:text/html}
}

@inproceedings{minas_syntax_2006,
	location = {Venezia, Italy},
	title = {Syntax analysis for diagram editors: a constraint satisfaction problem},
	isbn = {978-1-59593-353-9},
	url = {http://portal.acm.org/citation.cfm?doid=1133265.1133300},
	doi = {10.1145/1133265.1133300},
	shorttitle = {Syntax analysis for diagram editors},
	eventtitle = {the working conference},
	pages = {167},
	booktitle = {Proceedings of the working conference on Advanced visual interfaces  - {AVI} '06},
	publisher = {{ACM} Press},
	author = {Minas, Mark},
	urldate = {2020-04-15},
	date = {2006},
	langid = {english}
}

@article{schmidt_guest_2006,
	title = {Guest Editor's Introduction: Model-Driven Engineering},
	volume = {39},
	issn = {0018-9162},
	url = {http://ieeexplore.ieee.org/document/1597083/},
	doi = {10.1109/MC.2006.58},
	shorttitle = {Guest Editor's Introduction},
	pages = {25--31},
	number = {2},
	journaltitle = {Computer},
	shortjournal = {Computer},
	author = {Schmidt, D.C.},
	urldate = {2020-04-12},
	date = {2006-02},
	langid = {english}
}

@inproceedings{wuest_flexisketch_2015,
	location = {Florence, Italy},
	title = {{FlexiSketch} Team: collaborative sketching and notation creation on the fly},
	series = {{ICSE} '15},
	shorttitle = {F{\textless}span class="smallcaps {smallerCapital}"{\textgreater}lexi{\textless}/span{\textgreater}S{\textless}span class="smallcaps {smallerCapital}"{\textgreater}ketch{\textless}/span{\textgreater} T{\textless}span class="smallcaps {smallerCapital}"{\textgreater}eam{\textless}/span{\textgreater}},
	abstract = {When software engineers collaborate, they frequently use whiteboards or paper for sketching diagrams. This is fast and flexible, but the resulting diagrams cannot be interpreted by software modeling tools. We present {FlexiSketch} Team, a tool solution consisting of a significantly extended version of our previous, single-user {FlexiSketch} tool for Android devices and a new desktop tool. Our solution for collaborative, model-based sketching of free-form diagrams allows users to define and re-use diagramming notations on the fly. Several users can work simultaneously on the same model sketch with multiple tablets. The desktop tool provides a shared view of the drawing canvas which can be projected onto an electronic whiteboard. Preliminary results from an exploratory study show that our tool motivates meeting participants to actively take part in sketching as well as defining ad-hoc notations. Demo video: http://youtu.be/0kHjNfHLViM},
	pages = {685--688},
	booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 2},
	publisher = {{IEEE} Press},
	author = {Wüest, Dustin and Seyff, Norbert and Glinz, Martin},
	urldate = {2020-08-26},
	date = {2015-05-16},
	file = {Full Text PDF:C\:\\Users\\Flori\\Zotero\\storage\\WIK6LPEY\\Wüest et al. - 2015 - Flexispan.pdf:application/pdf}
}

@inproceedings{schurr_specification_1995,
	location = {Berlin, Heidelberg},
	title = {Specification of graph translators with triple graph grammars},
	isbn = {978-3-540-49183-5},
	doi = {10.1007/3-540-59071-4_45},
	series = {Lecture Notes in Computer Science},
	abstract = {Data integration is a key issue for any integrated set of software tools. A typical {CASE} environment, for instance, offers tools for the manipulation of requirements and software design documents, and it provides more or less sophisticated assistance for keeping these documents in a consistent state. Up to now, almost all data consistency observing or preserving integration tools are hand-crafted due to the lack of generic implementation frameworks and the absence of adequate specification formalisms. Triple graph grammars are intended to fill this gap and to support the specification of interdependencies between graph-like data structures on a very high level. Furthermore, they are the fundamentals of a new machinery for the production of batch-oriented as well as incrementally working data integration tools.},
	pages = {151--163},
	booktitle = {Graph-Theoretic Concepts in Computer Science},
	publisher = {Springer},
	author = {Schürr, Andy},
	editor = {Mayr, Ernst W. and Schmidt, Gunther and Tinhofer, Gottfried},
	date = {1995},
	langid = {english},
	keywords = {Graph Grammar, Related Graph, Syntax Tree, Target Graph, Triple Production},
	file = {Springer Full Text PDF:C\:\\Users\\Flori\\Zotero\\storage\\4VFGSXME\\Schürr - 1995 - Specification of graph translators with triple gra.pdf:application/pdf}
}

@inproceedings{konigs_model_2005,
	title = {Model transformation with triple graph grammars},
	pages = {166},
	booktitle = {Model Transformations in Practice Satellite Workshop of {MODELS}},
	publisher = {Citeseer},
	author = {Königs, Alexander},
	date = {2005}
}